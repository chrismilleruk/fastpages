{
  
    
        "post0": {
            "title": "From Model to Production",
            "content": "The Practice of Deep Learning . Starting Your Project . The State of Deep Learning . Computer vision . Text (natural language processing) . Combining text and images . Tabular data . Recommendation systems . Other data types . The Drivetrain Approach . Gathering Data . clean . To download images with Bing Image Search, sign up at Microsoft Azure for a free account. You will be given a key, which you can copy and enter in a cell as follows (replacing &#39;XXX&#39; with your key and executing it): . search_images_ddg . &lt;function fastbook.search_images_ddg(term, max_images=200)&gt; . key = os.environ.get(&#39;AZURE_SEARCH_KEY&#39;, &#39;00feb410b50f400ebd06acc209c7d516&#39;) . search_images_bing . &lt;function fastbook.search_images_bing(key, term, min_sz=128, max_images=150)&gt; . results = search_images_bing(key, &#39;grizzly bear&#39;) ims = results.attrgot(&#39;contentUrl&#39;) len(ims) results . (#150) [{&#39;webSearchUrl&#39;: &#39;https://www.bing.com/images/search?view=detailv2&amp;FORM=OIIRPO&amp;q=grizzly+bear&amp;id=4B18E005DE8D44734820DCB3533255E2AD9FB657&amp;simid=608031189119140750&#39;, &#39;name&#39;: &#39;Bears: Tips From A Controversial Expert | GearJunkie&#39;, &#39;thumbnailUrl&#39;: &#39;https://tse2.mm.bing.net/th?id=OIP.WYa7LLNdotAvnN0wJHsG6gHaGs&amp;pid=Api&#39;, &#39;datePublished&#39;: &#39;2020-05-21T21:01:00.0000000Z&#39;, &#39;isFamilyFriendly&#39;: True, &#39;contentUrl&#39;: &#39;https://images.gearjunkie.com/uploads/2015/07/Grizzly-Bear.jpg&#39;, &#39;hostPageUrl&#39;: &#39;https://gearjunkie.com/bears-safety-tips-bear-spray&#39;, &#39;contentSize&#39;: &#39;1316280 B&#39;, &#39;encodingFormat&#39;: &#39;jpeg&#39;, &#39;hostPageDisplayUrl&#39;: &#39;https://gearjunkie.com/bears-safety-tips-bear-spray&#39;, &#39;width&#39;: 2048, &#39;height&#39;: 1852, &#39;hostPageFavIconUrl&#39;: &#39;https://www.bing.com/th?id=ODF.P6c9yQaw10pLnuum6sROaw&amp;pid=Api&#39;, &#39;hostPageDomainFriendlyName&#39;: &#39;GearJunkie&#39;, &#39;hostPageDiscoveredDate&#39;: &#39;2016-02-04T00:00:00.0000000Z&#39;, &#39;thumbnail&#39;: {&#39;width&#39;: 474, &#39;height&#39;: 428}, &#39;imageInsightsToken&#39;: &#39;ccid_WYa7LLNd*cp_5092F6FFF94B63AB6D83D7326C9B6B48*mid_4B18E005DE8D44734820DCB3533255E2AD9FB657*simid_608031189119140750*thid_OIP.WYa7LLNdotAvnN0wJHsG6gHaGs&#39;, &#39;insightsMetadata&#39;: {&#39;recipeSourcesCount&#39;: 0, &#39;pagesIncludingCount&#39;: 4, &#39;availableSizesCount&#39;: 2}, &#39;imageId&#39;: &#39;4B18E005DE8D44734820DCB3533255E2AD9FB657&#39;, &#39;accentColor&#39;: &#39;4C671D&#39;},{&#39;webSearchUrl&#39;: &#39;https://www.bing.com/images/search?view=detailv2&amp;FORM=OIIRPO&amp;q=grizzly+bear&amp;id=5683F95AB2C4390AE138F7613EC4F0601600B9FA&amp;simid=607994900942883190&#39;, &#39;name&#39;: &#39;10 Facts About Grizzly Bears - Some Interesting Facts&#39;, &#39;thumbnailUrl&#39;: &#39;https://tse3.mm.bing.net/th?id=OIP.Ebdz7mQwVEny-uVn3MWrOwHaE8&amp;pid=Api&#39;, &#39;datePublished&#39;: &#39;2016-07-25T11:54:00.0000000Z&#39;, &#39;isFamilyFriendly&#39;: True, &#39;contentUrl&#39;: &#39;http://someinterestingfacts.net/wp-content/uploads/2016/07/Canadian-Grizzly-Bear.jpg&#39;, &#39;hostPageUrl&#39;: &#39;http://someinterestingfacts.net/10-facts-grizzly-bear/&#39;, &#39;contentSize&#39;: &#39;320188 B&#39;, &#39;encodingFormat&#39;: &#39;jpeg&#39;, &#39;hostPageDisplayUrl&#39;: &#39;someinterestingfacts.net/10-facts-grizzly-bear&#39;, &#39;width&#39;: 1600, &#39;height&#39;: 1068, &#39;hostPageDiscoveredDate&#39;: &#39;2016-07-25T11:54:00.0000000Z&#39;, &#39;thumbnail&#39;: {&#39;width&#39;: 474, &#39;height&#39;: 316}, &#39;imageInsightsToken&#39;: &#39;ccid_Ebdz7mQw*cp_46823CF8D23B2FC4E44E93EF968A53EE*mid_5683F95AB2C4390AE138F7613EC4F0601600B9FA*simid_607994900942883190*thid_OIP.Ebdz7mQwVEny-uVn3MWrOwHaE8&#39;, &#39;insightsMetadata&#39;: {&#39;recipeSourcesCount&#39;: 0, &#39;pagesIncludingCount&#39;: 45, &#39;availableSizesCount&#39;: 23}, &#39;imageId&#39;: &#39;5683F95AB2C4390AE138F7613EC4F0601600B9FA&#39;, &#39;accentColor&#39;: &#39;8C623F&#39;},{&#39;webSearchUrl&#39;: &#39;https://www.bing.com/images/search?view=detailv2&amp;FORM=OIIRPO&amp;q=grizzly+bear&amp;id=753BAE8D7E8284DA0D378113DB437A15800814ED&amp;simid=608022027976575263&#39;, &#39;name&#39;: &#39;The Legacy of Big Boy the Grizzly Bear | Blog | Nature | PBS&#39;, &#39;thumbnailUrl&#39;: &#39;https://tse4.mm.bing.net/th?id=OIP.P710tottl5nl_DmTEEDv-gHaEK&amp;pid=Api&#39;, &#39;datePublished&#39;: &#39;2018-08-22T02:23:00.0000000Z&#39;, &#39;isFamilyFriendly&#39;: True, &#39;contentUrl&#39;: &#39;http://www.pbs.org/wnet/nature/files/2018/07/Bear133.jpg&#39;, &#39;hostPageUrl&#39;: &#39;http://www.pbs.org/wnet/nature/blog/legacy-big-boy-grizzly-bear/&#39;, &#39;contentSize&#39;: &#39;631006 B&#39;, &#39;encodingFormat&#39;: &#39;jpeg&#39;, &#39;hostPageDisplayUrl&#39;: &#39;www.pbs.org/wnet/nature/blog/legacy-big-boy-grizzly-bear&#39;, &#39;width&#39;: 1920, &#39;height&#39;: 1080, &#39;hostPageFavIconUrl&#39;: &#39;https://www.bing.com/th?id=ODF.6ks36T98eL13adVA4nwLZA&amp;pid=Api&#39;, &#39;hostPageDomainFriendlyName&#39;: &#39;PBS&#39;, &#39;hostPageDiscoveredDate&#39;: &#39;2018-08-21T00:00:00.0000000Z&#39;, &#39;thumbnail&#39;: {&#39;width&#39;: 474, &#39;height&#39;: 266}, &#39;imageInsightsToken&#39;: &#39;ccid_P710tott*cp_0F0D46773348FABEE8C97ACBB9037F98*mid_753BAE8D7E8284DA0D378113DB437A15800814ED*simid_608022027976575263*thid_OIP.P710tottl5nl!_DmTEEDv-gHaEK&#39;, &#39;insightsMetadata&#39;: {&#39;pagesIncludingCount&#39;: 21, &#39;availableSizesCount&#39;: 9}, &#39;imageId&#39;: &#39;753BAE8D7E8284DA0D378113DB437A15800814ED&#39;, &#39;accentColor&#39;: &#39;717C4F&#39;},{&#39;webSearchUrl&#39;: &#39;https://www.bing.com/images/search?view=detailv2&amp;FORM=OIIRPO&amp;q=grizzly+bear&amp;id=0B4827DD29CBE93C428BE478EDCA08C6F8C8FB53&amp;simid=607991160027677186&#39;, &#39;name&#39;: &#39;The Truth About Grizzly Trophy Hunting - Wildlife Articles&#39;, &#39;thumbnailUrl&#39;: &#39;https://tse1.mm.bing.net/th?id=OIP.ydagS6uAenHdTlgp2TVgmgHaE7&amp;pid=Api&#39;, &#39;datePublished&#39;: &#39;2019-10-20T12:29:00.0000000Z&#39;, &#39;isFamilyFriendly&#39;: True, &#39;contentUrl&#39;: &#39;http://wildlifearticles.co.uk/wp-content/uploads/2015/10/grizzly-bear3.jpg&#39;, &#39;hostPageUrl&#39;: &#39;http://wildlifearticles.co.uk/the-truth-about-grizzly-trophy-hunting/&#39;, &#39;contentSize&#39;: &#39;152677 B&#39;, &#39;encodingFormat&#39;: &#39;jpeg&#39;, &#39;hostPageDisplayUrl&#39;: &#39;wildlifearticles.co.uk/the-truth-about-grizzly-trophy-hunting&#39;, &#39;width&#39;: 900, &#39;height&#39;: 599, &#39;hostPageDiscoveredDate&#39;: &#39;2016-11-29T00:00:00.0000000Z&#39;, &#39;thumbnail&#39;: {&#39;width&#39;: 474, &#39;height&#39;: 315}, &#39;imageInsightsToken&#39;: &#39;ccid_ydagS6uA*cp_D14B40B5F2F941DA1FF178BB8573CFFC*mid_0B4827DD29CBE93C428BE478EDCA08C6F8C8FB53*simid_607991160027677186*thid_OIP.ydagS6uAenHdTlgp2TVgmgHaE7&#39;, &#39;insightsMetadata&#39;: {&#39;recipeSourcesCount&#39;: 0, &#39;pagesIncludingCount&#39;: 55, &#39;availableSizesCount&#39;: 22}, &#39;imageId&#39;: &#39;0B4827DD29CBE93C428BE478EDCA08C6F8C8FB53&#39;, &#39;accentColor&#39;: &#39;B06D1B&#39;},{&#39;webSearchUrl&#39;: &#39;https://www.bing.com/images/search?view=detailv2&amp;FORM=OIIRPO&amp;q=grizzly+bear&amp;id=AE382679B2210B567F6C6E4B6F1D271067FEF99C&amp;simid=608022770999430594&#39;, &#39;name&#39;: &#39;Grizzly bear - Wikipedia&#39;, &#39;thumbnailUrl&#39;: &#39;https://tse3.mm.bing.net/th?id=OIP.-9Ktxv05WlmsrVahd9P8dwHaFU&amp;pid=Api&#39;, &#39;datePublished&#39;: &#39;2019-11-21T13:26:00.0000000Z&#39;, &#39;isFamilyFriendly&#39;: True, &#39;creativeCommons&#39;: &#39;AttributionShareAlike&#39;, &#39;contentUrl&#39;: &#39;https://upload.wikimedia.org/wikipedia/commons/thumb/a/a9/GrizzlyBearJeanBeaufort.jpg/1200px-GrizzlyBearJeanBeaufort.jpg&#39;, &#39;hostPageUrl&#39;: &#39;https://en.wikipedia.org/wiki/Grizzly_bear&#39;, &#39;contentSize&#39;: &#39;405605 B&#39;, &#39;encodingFormat&#39;: &#39;jpeg&#39;, &#39;hostPageDisplayUrl&#39;: &#39;https://en.wikipedia.org/wiki/Grizzly_bear&#39;, &#39;width&#39;: 1200, &#39;height&#39;: 863, &#39;hostPageFavIconUrl&#39;: &#39;https://www.bing.com/th?id=ODF.0QY68YH-YG5V7ZPdW4ZxaQ&amp;pid=Api&#39;, &#39;hostPageDomainFriendlyName&#39;: &#39;Wikipedia&#39;, &#39;hostPageDiscoveredDate&#39;: &#39;2015-06-25T00:00:00.0000000Z&#39;, &#39;thumbnail&#39;: {&#39;width&#39;: 474, &#39;height&#39;: 340}, &#39;imageInsightsToken&#39;: &#39;ccid_+9Ktxv05*cp_D617B6840045C1DD0A0F5C7460E45976*mid_AE382679B2210B567F6C6E4B6F1D271067FEF99C*simid_608022770999430594*thid_OIP.-9Ktxv05WlmsrVahd9P8dwHaFU&#39;, &#39;insightsMetadata&#39;: {&#39;pagesIncludingCount&#39;: 46, &#39;availableSizesCount&#39;: 29}, &#39;imageId&#39;: &#39;AE382679B2210B567F6C6E4B6F1D271067FEF99C&#39;, &#39;accentColor&#39;: &#39;B0921B&#39;},{&#39;webSearchUrl&#39;: &#39;https://www.bing.com/images/search?view=detailv2&amp;FORM=OIIRPO&amp;q=grizzly+bear&amp;id=1AE3FCE66B4BF849F12804F61C3240432217B7D7&amp;simid=608052036841639661&#39;, &#39;name&#39;: &#39;Over 7,000 apply for Wyoming grizzly bear hunt | goHUNT&#39;, &#39;thumbnailUrl&#39;: &#39;https://tse4.mm.bing.net/th?id=OIP.oK87CofAd1fZVdGRR3ceDQHaD4&amp;pid=Api&#39;, &#39;datePublished&#39;: &#39;2018-07-23T16:07:00.0000000Z&#39;, &#39;isFamilyFriendly&#39;: True, &#39;contentUrl&#39;: &#39;https://gohunt-assets-us-west-2.s3.amazonaws.com/wyoming-grizzly-bear-og_0.jpg&#39;, &#39;hostPageUrl&#39;: &#39;https://www.gohunt.com/read/news/over-7000-apply-for-wyoming-grizzly-bear-hunt&#39;, &#39;contentSize&#39;: &#39;384782 B&#39;, &#39;encodingFormat&#39;: &#39;jpeg&#39;, &#39;hostPageDisplayUrl&#39;: &#39;https://www.gohunt.com/read/news/over-7000-apply-for-wyoming-grizzly-bear-hunt&#39;, &#39;width&#39;: 1200, &#39;height&#39;: 630, &#39;hostPageDiscoveredDate&#39;: &#39;2018-07-23T16:07:00.0000000Z&#39;, &#39;thumbnail&#39;: {&#39;width&#39;: 474, &#39;height&#39;: 248}, &#39;imageInsightsToken&#39;: &#39;ccid_oK87CofA*cp_BCC18798DC4C2ED4EA5DFD8A3113AD9A*mid_1AE3FCE66B4BF849F12804F61C3240432217B7D7*simid_608052036841639661*thid_OIP.oK87CofAd1fZVdGRR3ceDQHaD4&#39;, &#39;insightsMetadata&#39;: {&#39;pagesIncludingCount&#39;: 2, &#39;availableSizesCount&#39;: 2}, &#39;imageId&#39;: &#39;1AE3FCE66B4BF849F12804F61C3240432217B7D7&#39;, &#39;accentColor&#39;: &#39;A67625&#39;},{&#39;webSearchUrl&#39;: &#39;https://www.bing.com/images/search?view=detailv2&amp;FORM=OIIRPO&amp;q=grizzly+bear&amp;id=AE382679B2210B567F6C183F911634664AFECE7C&amp;simid=607994991112490041&#39;, &#39;name&#39;: &#39;Grizzly bear - Wikipedia&#39;, &#39;thumbnailUrl&#39;: &#39;https://tse3.mm.bing.net/th?id=OIP.H2ZgJsu5c5mi3VyLqmCd0gHaE6&amp;pid=Api&#39;, &#39;datePublished&#39;: &#39;2018-02-11T20:56:00.0000000Z&#39;, &#39;isFamilyFriendly&#39;: True, &#39;creativeCommons&#39;: &#39;AttributionShareAlike&#39;, &#39;contentUrl&#39;: &#39;https://upload.wikimedia.org/wikipedia/commons/e/e2/Grizzlybear55.jpg&#39;, &#39;hostPageUrl&#39;: &#39;https://en.wikipedia.org/wiki/Grizzly_bear&#39;, &#39;contentSize&#39;: &#39;175294 B&#39;, &#39;encodingFormat&#39;: &#39;jpeg&#39;, &#39;hostPageDisplayUrl&#39;: &#39;https://en.wikipedia.org/wiki/Grizzly_bear&#39;, &#39;width&#39;: 1134, &#39;height&#39;: 753, &#39;hostPageFavIconUrl&#39;: &#39;https://www.bing.com/th?id=ODF.0QY68YH-YG5V7ZPdW4ZxaQ&amp;pid=Api&#39;, &#39;hostPageDomainFriendlyName&#39;: &#39;Wikipedia&#39;, &#39;hostPageDiscoveredDate&#39;: &#39;2015-06-25T00:00:00.0000000Z&#39;, &#39;thumbnail&#39;: {&#39;width&#39;: 474, &#39;height&#39;: 314}, &#39;imageInsightsToken&#39;: &#39;ccid_H2ZgJsu5*cp_9A833C46DBD615610A791CABA009447B*mid_AE382679B2210B567F6C183F911634664AFECE7C*simid_607994991112490041*thid_OIP.H2ZgJsu5c5mi3VyLqmCd0gHaE6&#39;, &#39;insightsMetadata&#39;: {&#39;recipeSourcesCount&#39;: 0, &#39;pagesIncludingCount&#39;: 167, &#39;availableSizesCount&#39;: 76}, &#39;imageId&#39;: &#39;AE382679B2210B567F6C183F911634664AFECE7C&#39;, &#39;accentColor&#39;: &#39;A1762A&#39;},{&#39;webSearchUrl&#39;: &#39;https://www.bing.com/images/search?view=detailv2&amp;FORM=OIIRPO&amp;q=grizzly+bear&amp;id=8F946D24D48B6689B06FA85DF0475816A248EB57&amp;simid=608036553550792345&#39;, &#39;name&#39;: &#39;Grizzly Bears Archives - Common Sense Evaluation&#39;, &#39;thumbnailUrl&#39;: &#39;https://tse3.mm.bing.net/th?id=OIP.R98nWJWyGAs87CiH1I84xwHaEK&amp;pid=Api&#39;, &#39;datePublished&#39;: &#39;2016-12-19T15:11:00.0000000Z&#39;, &#39;isFamilyFriendly&#39;: True, &#39;contentUrl&#39;: &#39;https://i0.wp.com/www.commonsenseevaluation.com/wp-content/uploads/2013/08/Bear.jpg&#39;, &#39;hostPageUrl&#39;: &#39;http://www.commonsenseevaluation.com/tag/grizzly-bears/&#39;, &#39;contentSize&#39;: &#39;991053 B&#39;, &#39;encodingFormat&#39;: &#39;jpeg&#39;, &#39;hostPageDisplayUrl&#39;: &#39;www.commonsenseevaluation.com/tag/grizzly-bears&#39;, &#39;width&#39;: 2560, &#39;height&#39;: 1440, &#39;hostPageDiscoveredDate&#39;: &#39;2013-07-06T00:00:00.0000000Z&#39;, &#39;thumbnail&#39;: {&#39;width&#39;: 474, &#39;height&#39;: 266}, &#39;imageInsightsToken&#39;: &#39;ccid_R98nWJWy*cp_60E02EC0D2357EFDA2A16A52E61CB00F*mid_8F946D24D48B6689B06FA85DF0475816A248EB57*simid_608036553550792345*thid_OIP.R98nWJWyGAs87CiH1I84xwHaEK&#39;, &#39;insightsMetadata&#39;: {&#39;recipeSourcesCount&#39;: 0, &#39;pagesIncludingCount&#39;: 32, &#39;availableSizesCount&#39;: 11}, &#39;imageId&#39;: &#39;8F946D24D48B6689B06FA85DF0475816A248EB57&#39;, &#39;accentColor&#39;: &#39;91643A&#39;},{&#39;webSearchUrl&#39;: &#39;https://www.bing.com/images/search?view=detailv2&amp;FORM=OIIRPO&amp;q=grizzly+bear&amp;id=861CAB82AE35F116E2E15A7155E4CDE444720CB5&amp;simid=607996588837637188&#39;, &#39;name&#39;: &#39;Grisly outlook: Bears kill more and more livestock as ...&#39;, &#39;thumbnailUrl&#39;: &#39;https://tse3.mm.bing.net/th?id=OIP.x6BJFW0b669k-KS1xud_QgHaE7&amp;pid=Api&#39;, &#39;datePublished&#39;: &#39;2019-04-11T21:24:00.0000000Z&#39;, &#39;isFamilyFriendly&#39;: True, &#39;contentUrl&#39;: &#39;https://www.tsln.com/wp-content/uploads/2018/10/bears-tsln-101318-3-1240x826.jpg&#39;, &#39;hostPageUrl&#39;: &#39;https://www.tsln.com/news/wyoming-grizzly-bear-update/&#39;, &#39;contentSize&#39;: &#39;227707 B&#39;, &#39;encodingFormat&#39;: &#39;jpeg&#39;, &#39;hostPageDisplayUrl&#39;: &#39;https://www.tsln.com/news/wyoming-grizzly-bear-update&#39;, &#39;width&#39;: 1240, &#39;height&#39;: 826, &#39;hostPageFavIconUrl&#39;: &#39;https://www.bing.com/th?id=ODF.naaPSqp1Pz37bdCNwXhx_Q&amp;pid=Api&#39;, &#39;hostPageDomainFriendlyName&#39;: &#39;Tri-State Livestock News&#39;, &#39;hostPageDiscoveredDate&#39;: &#39;2018-10-13T00:00:00.0000000Z&#39;, &#39;thumbnail&#39;: {&#39;width&#39;: 474, &#39;height&#39;: 315}, &#39;imageInsightsToken&#39;: &#39;ccid_x6BJFW0b*cp_D29AE073F2D2D292AA66B43B874A41EF*mid_861CAB82AE35F116E2E15A7155E4CDE444720CB5*simid_607996588837637188*thid_OIP.x6BJFW0b669k-KS1xud!_QgHaE7&#39;, &#39;insightsMetadata&#39;: {&#39;recipeSourcesCount&#39;: 0, &#39;pagesIncludingCount&#39;: 31, &#39;availableSizesCount&#39;: 15}, &#39;imageId&#39;: &#39;861CAB82AE35F116E2E15A7155E4CDE444720CB5&#39;, &#39;accentColor&#39;: &#39;496D39&#39;},{&#39;webSearchUrl&#39;: &#39;https://www.bing.com/images/search?view=detailv2&amp;FORM=OIIRPO&amp;q=grizzly+bear&amp;id=75B925E1A02C0A7C0467DE8B343BC0EF8694905E&amp;simid=607997074162583979&#39;, &#39;name&#39;: &#39;Grizzly Bear - The Canadian Encyclopedia&#39;, &#39;thumbnailUrl&#39;: &#39;https://tse4.mm.bing.net/th?id=OIP.1qjVNM93gpWmEJHUZQVihAHaE8&amp;pid=Api&#39;, &#39;datePublished&#39;: &#39;2018-06-24T14:31:00.0000000Z&#39;, &#39;isFamilyFriendly&#39;: True, &#39;contentUrl&#39;: &#39;https://d3d0lqu00lnqvz.cloudfront.net/media/media/897b2e5d-6d4c-40fa-bbe8-6829455747e2.jpg&#39;, &#39;hostPageUrl&#39;: &#39;https://www.thecanadianencyclopedia.ca/en/article/grizzly-bear/&#39;, &#39;contentSize&#39;: &#39;223988 B&#39;, &#39;encodingFormat&#39;: &#39;jpeg&#39;, &#39;hostPageDisplayUrl&#39;: &#39;https://www.thecanadianencyclopedia.ca/en/article/grizzly-bear&#39;, &#39;width&#39;: 2000, &#39;height&#39;: 1334, &#39;hostPageFavIconUrl&#39;: &#39;https://www.bing.com/th?id=ODF.L_A9C4swd9l87bDsJkE3xA&amp;pid=Api&#39;, &#39;hostPageDomainFriendlyName&#39;: &#39;The Canadian Encyclopedia&#39;, &#39;hostPageDiscoveredDate&#39;: &#39;2018-02-02T00:00:00.0000000Z&#39;, &#39;thumbnail&#39;: {&#39;width&#39;: 474, &#39;height&#39;: 316}, &#39;imageInsightsToken&#39;: &#39;ccid_1qjVNM93*cp_E6A158533F5A83778CA607F035E8B967*mid_75B925E1A02C0A7C0467DE8B343BC0EF8694905E*simid_607997074162583979*thid_OIP.1qjVNM93gpWmEJHUZQVihAHaE8&#39;, &#39;insightsMetadata&#39;: {&#39;recipeSourcesCount&#39;: 0, &#39;pagesIncludingCount&#39;: 13, &#39;availableSizesCount&#39;: 7}, &#39;imageId&#39;: &#39;75B925E1A02C0A7C0467DE8B343BC0EF8694905E&#39;, &#39;accentColor&#39;: &#39;BBAA10&#39;}...] . ims . (#150) [&#39;https://images.gearjunkie.com/uploads/2015/07/Grizzly-Bear.jpg&#39;,&#39;http://someinterestingfacts.net/wp-content/uploads/2016/07/Canadian-Grizzly-Bear.jpg&#39;,&#39;http://www.pbs.org/wnet/nature/files/2018/07/Bear133.jpg&#39;,&#39;http://wildlifearticles.co.uk/wp-content/uploads/2015/10/grizzly-bear3.jpg&#39;,&#39;https://upload.wikimedia.org/wikipedia/commons/thumb/a/a9/GrizzlyBearJeanBeaufort.jpg/1200px-GrizzlyBearJeanBeaufort.jpg&#39;,&#39;https://gohunt-assets-us-west-2.s3.amazonaws.com/wyoming-grizzly-bear-og_0.jpg&#39;,&#39;https://upload.wikimedia.org/wikipedia/commons/e/e2/Grizzlybear55.jpg&#39;,&#39;https://i0.wp.com/www.commonsenseevaluation.com/wp-content/uploads/2013/08/Bear.jpg&#39;,&#39;https://www.tsln.com/wp-content/uploads/2018/10/bears-tsln-101318-3-1240x826.jpg&#39;,&#39;https://d3d0lqu00lnqvz.cloudfront.net/media/media/897b2e5d-6d4c-40fa-bbe8-6829455747e2.jpg&#39;...] . dest = &#39;../images/grizzly.jpg&#39; download_url(ims[0], dest) . im = Image.open(dest) im.to_thumb(128,128) . bear_types = &#39;grizzly&#39;,&#39;black&#39;,&#39;teddy&#39; path = Path(&#39;bears&#39;) . if not path.exists(): path.mkdir() for o in bear_types: dest = (path/o) dest.mkdir(exist_ok=True) results = search_images_bing(key, f&#39;{o} bear&#39;) download_images(dest, urls=results.attrgot(&#39;contentUrl&#39;)) . fns = get_image_files(path) fns . (#445) [Path(&#39;bears/grizzly/00000007.jpg&#39;),Path(&#39;bears/grizzly/00000002.jpg&#39;),Path(&#39;bears/grizzly/00000001.jpg&#39;),Path(&#39;bears/grizzly/00000004.jpg&#39;),Path(&#39;bears/grizzly/00000006.jpg&#39;),Path(&#39;bears/grizzly/00000008.jpg&#39;),Path(&#39;bears/grizzly/00000009.jpg&#39;),Path(&#39;bears/grizzly/00000003.jpg&#39;),Path(&#39;bears/grizzly/00000014.jpg&#39;),Path(&#39;bears/grizzly/00000012.jpg&#39;)...] . failed = verify_images(fns) failed . (#6) [Path(&#39;bears/grizzly/00000062.jpg&#39;),Path(&#39;bears/grizzly/00000078.jpg&#39;),Path(&#39;bears/grizzly/00000090.jpg&#39;),Path(&#39;bears/black/00000119.jpeg&#39;),Path(&#39;bears/teddy/00000031.jpg&#39;),Path(&#39;bears/teddy/00000110.jpg&#39;)] . failed.map(Path.unlink); . Sidebar: Getting Help in Jupyter Notebooks . End sidebar . From Data to DataLoaders . bears = DataBlock( blocks=(ImageBlock, CategoryBlock), get_items=get_image_files, splitter=RandomSplitter(valid_pct=0.2, seed=42), get_y=parent_label, item_tfms=Resize(128)) . doc(parent_label) . dls = bears.dataloaders(path) . dls.valid.show_batch(max_n=12, nrows=2) . bears = bears.new(item_tfms=Resize(128, ResizeMethod.Squish)) dls = bears.dataloaders(path) dls.valid.show_batch(max_n=4, nrows=1) . bears = bears.new(item_tfms=Resize(128, ResizeMethod.Pad, pad_mode=&#39;zeros&#39;)) dls = bears.dataloaders(path) dls.valid.show_batch(max_n=4, nrows=1) . bears = bears.new(item_tfms=RandomResizedCrop(128, min_scale=0.3)) dls = bears.dataloaders(path) dls.train.show_batch(max_n=4, nrows=1, unique=True) . Data Augmentation . bears = bears.new(item_tfms=Resize(128), batch_tfms=aug_transforms(mult=2)) dls = bears.dataloaders(path) dls.train.show_batch(max_n=8, nrows=2, unique=True) . Training Your Model, and Using It to Clean Your Data . bears = bears.new( item_tfms=RandomResizedCrop(224, min_scale=0.5), batch_tfms=aug_transforms()) dls = bears.dataloaders(path) . learn = cnn_learner(dls, resnet18, metrics=error_rate) learn.fine_tune(4) . Downloading: &#34;https://download.pytorch.org/models/resnet18-5c106cde.pth&#34; to /root/.cache/torch/hub/checkpoints/resnet18-5c106cde.pth . . epoch train_loss valid_loss error_rate time . 0 | 1.133961 | 0.098522 | 0.034483 | 00:11 | . epoch train_loss valid_loss error_rate time . 0 | 0.149269 | 0.081835 | 0.022989 | 00:12 | . 1 | 0.081021 | 0.040247 | 0.011494 | 00:10 | . 2 | 0.057875 | 0.017412 | 0.011494 | 00:10 | . 3 | 0.053321 | 0.009472 | 0.000000 | 00:11 | . interp = ClassificationInterpretation.from_learner(learn) interp.plot_confusion_matrix() . interp.plot_top_losses(5, nrows=1) . cleaner = ImageClassifierCleaner(learn) cleaner . FileNotFoundError Traceback (most recent call last) &lt;ipython-input-44-1df86057f98d&gt; in &lt;module&gt; -&gt; 1 cleaner = ImageClassifierCleaner(learn) 2 cleaner /opt/conda/envs/fastai/lib/python3.8/site-packages/fastai/vision/widgets.py in __init__(self, learn, **kwargs) 79 self.dd_cats = Dropdown(options=vocab) 80 self.dd_ds = Dropdown(options=(&#39;Train&#39;,&#39;Valid&#39;)) &gt; 81 self.iwis = _get_iw_info(learn,0),_get_iw_info(learn,1) 82 self.dd_ds.observe(self.on_change_ds, &#39;value&#39;) 83 self.dd_cats.observe(self.on_change_ds, &#39;value&#39;) /opt/conda/envs/fastai/lib/python3.8/site-packages/fastai/vision/widgets.py in _get_iw_info(learn, ds_idx) 66 def _get_iw_info(learn, ds_idx=0): 67 dl = learn.dls[ds_idx].new(shuffle=False, drop_last=False) &gt; 68 inp,probs,targs,preds,losses = learn.get_preds(dl=dl, with_input=True, with_loss=True, with_decoded=True) 69 inp,targs = L(zip(*dl.decode_batch((inp,targs), max_n=9999))) 70 return L([dl.dataset.items,targs,losses]).zip() /opt/conda/envs/fastai/lib/python3.8/site-packages/fastai/learner.py in get_preds(self, ds_idx, dl, with_input, with_decoded, with_loss, act, inner, reorder, cbs, **kwargs) 235 if with_loss: ctx_mgrs.append(self.loss_not_reduced()) 236 with ContextManagers(ctx_mgrs): --&gt; 237 self._do_epoch_validate(dl=dl) 238 if act is None: act = getattr(self.loss_func, &#39;activation&#39;, noop) 239 res = cb.all_tensors() /opt/conda/envs/fastai/lib/python3.8/site-packages/fastai/learner.py in _do_epoch_validate(self, ds_idx, dl) 185 if dl is None: dl = self.dls[ds_idx] 186 self.dl = dl --&gt; 187 with torch.no_grad(): self._with_events(self.all_batches, &#39;validate&#39;, CancelValidException) 188 189 def _do_epoch(self): /opt/conda/envs/fastai/lib/python3.8/site-packages/fastai/learner.py in _with_events(self, f, event_type, ex, final) 152 153 def _with_events(self, f, event_type, ex, final=noop): --&gt; 154 try: self(f&#39;before_{event_type}&#39;) ;f() 155 except ex: self(f&#39;after_cancel_{event_type}&#39;) 156 finally: self(f&#39;after_{event_type}&#39;) ;final() /opt/conda/envs/fastai/lib/python3.8/site-packages/fastai/learner.py in all_batches(self) 158 def all_batches(self): 159 self.n_iter = len(self.dl) --&gt; 160 for o in enumerate(self.dl): self.one_batch(*o) 161 162 def _do_one_batch(self): /opt/conda/envs/fastai/lib/python3.8/site-packages/fastai/data/load.py in __iter__(self) 99 self.before_iter() 100 self.__idxs=self.get_idxs() # called in context of main process (not workers/subprocesses) --&gt; 101 for b in _loaders[self.fake_l.num_workers==0](self.fake_l): 102 if self.device is not None: b = to_device(b, self.device) 103 yield self.after_batch(b) /opt/conda/envs/fastai/lib/python3.8/site-packages/torch/utils/data/dataloader.py in __next__(self) 433 if self._sampler_iter is None: 434 self._reset() --&gt; 435 data = self._next_data() 436 self._num_yielded += 1 437 if self._dataset_kind == _DatasetKind.Iterable and /opt/conda/envs/fastai/lib/python3.8/site-packages/torch/utils/data/dataloader.py in _next_data(self) 1083 else: 1084 del self._task_info[idx] -&gt; 1085 return self._process_data(data) 1086 1087 def _try_put_index(self): /opt/conda/envs/fastai/lib/python3.8/site-packages/torch/utils/data/dataloader.py in _process_data(self, data) 1109 self._try_put_index() 1110 if isinstance(data, ExceptionWrapper): -&gt; 1111 data.reraise() 1112 return data 1113 /opt/conda/envs/fastai/lib/python3.8/site-packages/torch/_utils.py in reraise(self) 426 # have message field 427 raise self.exc_type(message=msg) --&gt; 428 raise self.exc_type(msg) 429 430 FileNotFoundError: Caught FileNotFoundError in DataLoader worker process 0. Original Traceback (most recent call last): File &#34;/opt/conda/envs/fastai/lib/python3.8/site-packages/torch/utils/data/_utils/worker.py&#34;, line 198, in _worker_loop data = fetcher.fetch(index) File &#34;/opt/conda/envs/fastai/lib/python3.8/site-packages/torch/utils/data/_utils/fetch.py&#34;, line 34, in fetch data = next(self.dataset_iter) File &#34;/opt/conda/envs/fastai/lib/python3.8/site-packages/fastai/data/load.py&#34;, line 110, in create_batches yield from map(self.do_batch, self.chunkify(res)) File &#34;/opt/conda/envs/fastai/lib/python3.8/site-packages/fastcore/basics.py&#34;, line 211, in chunked res = list(itertools.islice(it, chunk_sz)) File &#34;/opt/conda/envs/fastai/lib/python3.8/site-packages/fastai/data/load.py&#34;, line 125, in do_item try: return self.after_item(self.create_item(s)) File &#34;/opt/conda/envs/fastai/lib/python3.8/site-packages/fastai/data/load.py&#34;, line 131, in create_item def create_item(self, s): return next(self.it) if s is None else self.dataset[s] File &#34;/opt/conda/envs/fastai/lib/python3.8/site-packages/fastai/data/core.py&#34;, line 314, in __getitem__ res = tuple([tl[it] for tl in self.tls]) File &#34;/opt/conda/envs/fastai/lib/python3.8/site-packages/fastai/data/core.py&#34;, line 314, in &lt;listcomp&gt; res = tuple([tl[it] for tl in self.tls]) File &#34;/opt/conda/envs/fastai/lib/python3.8/site-packages/fastai/data/core.py&#34;, line 280, in __getitem__ return self._after_item(res) if is_indexer(idx) else res.map(self._after_item) File &#34;/opt/conda/envs/fastai/lib/python3.8/site-packages/fastai/data/core.py&#34;, line 242, in _after_item def _after_item(self, o): return self.tfms(o) File &#34;/opt/conda/envs/fastai/lib/python3.8/site-packages/fastcore/transform.py&#34;, line 198, in __call__ def __call__(self, o): return compose_tfms(o, tfms=self.fs, split_idx=self.split_idx) File &#34;/opt/conda/envs/fastai/lib/python3.8/site-packages/fastcore/transform.py&#34;, line 150, in compose_tfms x = f(x, **kwargs) File &#34;/opt/conda/envs/fastai/lib/python3.8/site-packages/fastcore/transform.py&#34;, line 73, in __call__ def __call__(self, x, **kwargs): return self._call(&#39;encodes&#39;, x, **kwargs) File &#34;/opt/conda/envs/fastai/lib/python3.8/site-packages/fastcore/transform.py&#34;, line 83, in _call return self._do_call(getattr(self, fn), x, **kwargs) File &#34;/opt/conda/envs/fastai/lib/python3.8/site-packages/fastcore/transform.py&#34;, line 89, in _do_call return retain_type(f(x, **kwargs), x, ret) File &#34;/opt/conda/envs/fastai/lib/python3.8/site-packages/fastcore/dispatch.py&#34;, line 117, in __call__ return f(*args, **kwargs) File &#34;/opt/conda/envs/fastai/lib/python3.8/site-packages/fastai/vision/core.py&#34;, line 110, in create return cls(load_image(fn, **merge(cls._open_args, kwargs))) File &#34;/opt/conda/envs/fastai/lib/python3.8/site-packages/fastai/vision/core.py&#34;, line 85, in load_image im = Image.open(fn) File &#34;/opt/conda/envs/fastai/lib/python3.8/site-packages/PIL/Image.py&#34;, line 2891, in open fp = builtins.open(filename, &#34;rb&#34;) FileNotFoundError: [Errno 2] No such file or directory: &#39;/notebooks/clean/bears/teddy/00000126.jpg&#39; . Turning Your Model into an Online Application . Using the Model for Inference . learn.export() . path = Path() path.ls(file_exts=&#39;.pkl&#39;) . (#1) [Path(&#39;export.pkl&#39;)] . learn_inf = load_learner(path/&#39;export.pkl&#39;) . learn_inf.predict(&#39;../images/grizzly.jpg&#39;) . (&#39;grizzly&#39;, TensorImage(1), TensorImage([2.6147e-09, 1.0000e+00, 4.6401e-10])) . learn_inf.dls.vocab . [&#39;black&#39;, &#39;grizzly&#39;, &#39;teddy&#39;] . Creating a Notebook App from the Model . btn_upload = widgets.FileUpload() btn_upload . img = PILImage.create(btn_upload.data[-1]) . IndexError Traceback (most recent call last) &lt;ipython-input-63-82db33b3197c&gt; in &lt;module&gt; -&gt; 1 img = PILImage.create(btn_upload.data[-1]) IndexError: list index out of range . out_pl = widgets.Output() out_pl.clear_output() with out_pl: display(img.to_thumb(128,128)) out_pl . pred,pred_idx,probs = learn_inf.predict(img) . lbl_pred = widgets.Label() lbl_pred.value = f&#39;Prediction: {pred}; Probability: {probs[pred_idx]:.04f}&#39; lbl_pred . btn_run = widgets.Button(description=&#39;Classify&#39;) btn_run . def on_click_classify(change): img = PILImage.create(btn_upload.data[-1]) out_pl.clear_output() with out_pl: display(img.to_thumb(128,128)) pred,pred_idx,probs = learn_inf.predict(img) lbl_pred.value = f&#39;Prediction: {pred}; Probability: {probs[pred_idx]:.04f}&#39; btn_run.on_click(on_click_classify) . VBox([widgets.Label(&#39;Select your bear!&#39;), btn_upload, btn_run, out_pl, lbl_pred]) . Turning Your Notebook into a Real App . Deploying your app . How to Avoid Disaster . Unforeseen Consequences and Feedback Loops . Get Writing! . Questionnaire . Provide an example of where the bear classification model might work poorly in production, due to structural or style differences in the training data. | Where do text models currently have a major deficiency? | What are possible negative societal implications of text generation models? | In situations where a model might make mistakes, and those mistakes could be harmful, what is a good alternative to automating a process? | What kind of tabular data is deep learning particularly good at? | What&#39;s a key downside of directly using a deep learning model for recommendation systems? | What are the steps of the Drivetrain Approach? | How do the steps of the Drivetrain Approach map to a recommendation system? | Create an image recognition model using data you curate, and deploy it on the web. | What is DataLoaders? | What four things do we need to tell fastai to create DataLoaders? | What does the splitter parameter to DataBlock do? | How do we ensure a random split always gives the same validation set? | What letters are often used to signify the independent and dependent variables? | What&#39;s the difference between the crop, pad, and squish resize approaches? When might you choose one over the others? | What is data augmentation? Why is it needed? | What is the difference between item_tfms and batch_tfms? | What is a confusion matrix? | What does export save? | What is it called when we use a model for getting predictions, instead of training? | What are IPython widgets? | When might you want to use CPU for deployment? When might GPU be better? | What are the downsides of deploying your app to a server, instead of to a client (or edge) device such as a phone or PC? | What are three examples of problems that could occur when rolling out a bear warning system in practice? | What is &quot;out-of-domain data&quot;? | What is &quot;domain shift&quot;? | What are the three steps in the deployment process? | Further Research . Consider how the Drivetrain Approach maps to a project or problem you&#39;re interested in. | When might it be best to avoid certain types of data augmentation? | For a project you&#39;re interested in applying deep learning to, consider the thought experiment &quot;What would happen if it went really, really well?&quot; | Start a blog, and write your first blog post. For instance, write about what you think deep learning might be useful for in a domain you&#39;re interested in. |",
            "url": "https://chrismilleruk.github.io/fastpages/2021/01/06/fastai-02_production.html",
            "relUrl": "/2021/01/06/fastai-02_production.html",
            "date": " • Jan 6, 2021"
        }
        
    
  
    
        ,"post1": {
            "title": "Your Deep Learning Journey",
            "content": "Deep Learning Is for Everyone . Neural Networks: A Brief History . Who We Are . How to Learn Deep Learning . Your Projects and Your Mindset . The Software: PyTorch, fastai, and Jupyter . Your First Model . Getting a GPU Deep Learning Server . Running Your First Notebook . from fastai.vision.all import * path = untar_data(URLs.PETS)/&#39;images&#39; def is_cat(x): return x[0].isupper() dls = ImageDataLoaders.from_name_func( path, get_image_files(path), valid_pct=0.2, seed=42, label_func=is_cat, item_tfms=Resize(224)) learn = cnn_learner(dls, resnet34, metrics=error_rate) learn.fine_tune(1) . epoch train_loss valid_loss error_rate time . 0 | 0.161300 | 0.021319 | 0.009472 | 00:33 | . epoch train_loss valid_loss error_rate time . 0 | 0.069097 | 0.040982 | 0.009472 | 00:43 | . Sidebar: This Book Was Written in Jupyter Notebooks . 1+1 . 2 . img = PILImage.create(image_cat()) img.to_thumb(192) . End sidebar . uploader = widgets.FileUpload() uploader . img = PILImage.create(uploader.data[0]) is_cat,_,probs = learn.predict(img) print(f&quot;Is this a cat?: {is_cat}.&quot;) print(f&quot;Probability it&#39;s a cat: {probs[1].item():.6f}&quot;) . NameError Traceback (most recent call last) &lt;ipython-input-13-37db1363ed76&gt; in &lt;module&gt; 1 img = PILImage.create(uploader.data[0]) -&gt; 2 is_cat,_,probs = learn.predict(img) 3 print(f&#34;Is this a cat?: {is_cat}.&#34;) 4 print(f&#34;Probability it&#39;s a cat: {probs[1].item():.6f}&#34;) NameError: name &#39;learn&#39; is not defined . What Is Machine Learning? . gv(&#39;&#39;&#39;program[shape=box3d width=1 height=0.7] inputs-&gt;program-&gt;results&#39;&#39;&#39;) . &lt;!DOCTYPE svg PUBLIC &quot;-//W3C//DTD SVG 1.1//EN&quot; &quot;http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd&quot;&gt; G program program results results program&#45;&gt;results inputs inputs inputs&#45;&gt;program gv(&#39;&#39;&#39;model[shape=box3d width=1 height=0.7] inputs-&gt;model-&gt;results; weights-&gt;model&#39;&#39;&#39;) . &lt;!DOCTYPE svg PUBLIC &quot;-//W3C//DTD SVG 1.1//EN&quot; &quot;http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd&quot;&gt; G model model results results model&#45;&gt;results inputs inputs inputs&#45;&gt;model weights weights weights&#45;&gt;model gv(&#39;&#39;&#39;ordering=in model[shape=box3d width=1 height=0.7] inputs-&gt;model-&gt;results; weights-&gt;model; results-&gt;performance performance-&gt;weights[constraint=false label=update]&#39;&#39;&#39;) . &lt;!DOCTYPE svg PUBLIC &quot;-//W3C//DTD SVG 1.1//EN&quot; &quot;http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd&quot;&gt; G model model results results model&#45;&gt;results inputs inputs inputs&#45;&gt;model performance performance results&#45;&gt;performance weights weights weights&#45;&gt;model performance&#45;&gt;weights update gv(&#39;&#39;&#39;model[shape=box3d width=1 height=0.7] inputs-&gt;model-&gt;results&#39;&#39;&#39;) . &lt;!DOCTYPE svg PUBLIC &quot;-//W3C//DTD SVG 1.1//EN&quot; &quot;http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd&quot;&gt; G model model results results model&#45;&gt;results inputs inputs inputs&#45;&gt;model What Is a Neural Network? . A Bit of Deep Learning Jargon . gv(&#39;&#39;&#39;ordering=in model[shape=box3d width=1 height=0.7 label=architecture] inputs-&gt;model-&gt;predictions; parameters-&gt;model; labels-&gt;loss; predictions-&gt;loss loss-&gt;parameters[constraint=false label=update]&#39;&#39;&#39;) . &lt;!DOCTYPE svg PUBLIC &quot;-//W3C//DTD SVG 1.1//EN&quot; &quot;http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd&quot;&gt; G model architecture predictions predictions model&#45;&gt;predictions inputs inputs inputs&#45;&gt;model loss loss predictions&#45;&gt;loss parameters parameters parameters&#45;&gt;model labels labels labels&#45;&gt;loss loss&#45;&gt;parameters update Limitations Inherent To Machine Learning . From this picture we can now see some fundamental things about training a deep learning model: . A model cannot be created without data. | A model can only learn to operate on the patterns seen in the input data used to train it. | This learning approach only creates predictions, not recommended actions. | It&#39;s not enough to just have examples of input data; we need labels for that data too (e.g., pictures of dogs and cats aren&#39;t enough to train a model; we need a label for each one, saying which ones are dogs, and which are cats). | . Generally speaking, we&#39;ve seen that most organizations that say they don&#39;t have enough data, actually mean they don&#39;t have enough labeled data. If any organization is interested in doing something in practice with a model, then presumably they have some inputs they plan to run their model against. And presumably they&#39;ve been doing that some other way for a while (e.g., manually, or with some heuristic program), so they have data from those processes! For instance, a radiology practice will almost certainly have an archive of medical scans (since they need to be able to check how their patients are progressing over time), but those scans may not have structured labels containing a list of diagnoses or interventions (since radiologists generally create free-text natural language reports, not structured data). We&#39;ll be discussing labeling approaches a lot in this book, because it&#39;s such an important issue in practice. . Since these kinds of machine learning models can only make predictions (i.e., attempt to replicate labels), this can result in a significant gap between organizational goals and model capabilities. For instance, in this book you&#39;ll learn how to create a recommendation system that can predict what products a user might purchase. This is often used in e-commerce, such as to customize products shown on a home page by showing the highest-ranked items. But such a model is generally created by looking at a user and their buying history (inputs) and what they went on to buy or look at (labels), which means that the model is likely to tell you about products the user already has or already knows about, rather than new products that they are most likely to be interested in hearing about. That&#39;s very different to what, say, an expert at your local bookseller might do, where they ask questions to figure out your taste, and then tell you about authors or series that you&#39;ve never heard of before. . How Our Image Recognizer Works . What Our Image Recognizer Learned . Image Recognizers Can Tackle Non-Image Tasks . Jargon Recap . Deep Learning Is Not Just for Image Classification . path = untar_data(URLs.CAMVID_TINY) dls = SegmentationDataLoaders.from_label_func( path, bs=8, fnames = get_image_files(path/&quot;images&quot;), label_func = lambda o: path/&#39;labels&#39;/f&#39;{o.stem}_P{o.suffix}&#39;, codes = np.loadtxt(path/&#39;codes.txt&#39;, dtype=str) ) learn = unet_learner(dls, resnet34) learn.fine_tune(8) . epoch train_loss valid_loss time . 0 | 2.987978 | 2.480352 | 00:21 | . epoch train_loss valid_loss time . 0 | 2.158624 | 1.743689 | 00:23 | . 1 | 1.767877 | 1.964173 | 00:26 | . 2 | 1.643144 | 1.283908 | 00:25 | . 3 | 1.472303 | 1.108046 | 00:25 | . 4 | 1.320544 | 0.973587 | 00:25 | . 5 | 1.183503 | 0.858053 | 00:26 | . 6 | 1.073220 | 0.822954 | 00:26 | . 7 | 0.986720 | 0.817717 | 00:25 | . learn.show_results(max_n=6, figsize=(7,8)) . from fastai.text.all import * dls = TextDataLoaders.from_folder(untar_data(URLs.IMDB), valid=&#39;test&#39;) learn = text_classifier_learner(dls, AWD_LSTM, drop_mult=0.5, metrics=accuracy) learn.fine_tune(4, 1e-2) . epoch train_loss valid_loss accuracy time . 0 | 0.809147 | 01:06 | . KeyboardInterrupt Traceback (most recent call last) &lt;ipython-input-17-5ab79cd5e866&gt; in &lt;module&gt; 3 dls = TextDataLoaders.from_folder(untar_data(URLs.IMDB), valid=&#39;test&#39;) 4 learn = text_classifier_learner(dls, AWD_LSTM, drop_mult=0.5, metrics=accuracy) -&gt; 5 learn.fine_tune(4, 1e-2) /opt/conda/envs/fastai/lib/python3.8/site-packages/fastai/callback/schedule.py in fine_tune(self, epochs, base_lr, freeze_epochs, lr_mult, pct_start, div, **kwargs) 155 &#34;Fine tune with `freeze` for `freeze_epochs` then with `unfreeze` from `epochs` using discriminative LR&#34; 156 self.freeze() --&gt; 157 self.fit_one_cycle(freeze_epochs, slice(base_lr), pct_start=0.99, **kwargs) 158 base_lr /= 2 159 self.unfreeze() /opt/conda/envs/fastai/lib/python3.8/site-packages/fastai/callback/schedule.py in fit_one_cycle(self, n_epoch, lr_max, div, div_final, pct_start, wd, moms, cbs, reset_opt) 110 scheds = {&#39;lr&#39;: combined_cos(pct_start, lr_max/div, lr_max, lr_max/div_final), 111 &#39;mom&#39;: combined_cos(pct_start, *(self.moms if moms is None else moms))} --&gt; 112 self.fit(n_epoch, cbs=ParamScheduler(scheds)+L(cbs), reset_opt=reset_opt, wd=wd) 113 114 # Cell /opt/conda/envs/fastai/lib/python3.8/site-packages/fastai/learner.py in fit(self, n_epoch, lr, wd, cbs, reset_opt) 203 self.opt.set_hypers(lr=self.lr if lr is None else lr) 204 self.n_epoch = n_epoch --&gt; 205 self._with_events(self._do_fit, &#39;fit&#39;, CancelFitException, self._end_cleanup) 206 207 def _end_cleanup(self): self.dl,self.xb,self.yb,self.pred,self.loss = None,(None,),(None,),None,None /opt/conda/envs/fastai/lib/python3.8/site-packages/fastai/learner.py in _with_events(self, f, event_type, ex, final) 152 153 def _with_events(self, f, event_type, ex, final=noop): --&gt; 154 try: self(f&#39;before_{event_type}&#39;) ;f() 155 except ex: self(f&#39;after_cancel_{event_type}&#39;) 156 finally: self(f&#39;after_{event_type}&#39;) ;final() /opt/conda/envs/fastai/lib/python3.8/site-packages/fastai/learner.py in _do_fit(self) 194 for epoch in range(self.n_epoch): 195 self.epoch=epoch --&gt; 196 self._with_events(self._do_epoch, &#39;epoch&#39;, CancelEpochException) 197 198 def fit(self, n_epoch, lr=None, wd=None, cbs=None, reset_opt=False): /opt/conda/envs/fastai/lib/python3.8/site-packages/fastai/learner.py in _with_events(self, f, event_type, ex, final) 152 153 def _with_events(self, f, event_type, ex, final=noop): --&gt; 154 try: self(f&#39;before_{event_type}&#39;) ;f() 155 except ex: self(f&#39;after_cancel_{event_type}&#39;) 156 finally: self(f&#39;after_{event_type}&#39;) ;final() /opt/conda/envs/fastai/lib/python3.8/site-packages/fastai/learner.py in _do_epoch(self) 188 189 def _do_epoch(self): --&gt; 190 self._do_epoch_train() 191 self._do_epoch_validate() 192 /opt/conda/envs/fastai/lib/python3.8/site-packages/fastai/learner.py in _do_epoch_train(self) 180 def _do_epoch_train(self): 181 self.dl = self.dls.train --&gt; 182 self._with_events(self.all_batches, &#39;train&#39;, CancelTrainException) 183 184 def _do_epoch_validate(self, ds_idx=1, dl=None): /opt/conda/envs/fastai/lib/python3.8/site-packages/fastai/learner.py in _with_events(self, f, event_type, ex, final) 152 153 def _with_events(self, f, event_type, ex, final=noop): --&gt; 154 try: self(f&#39;before_{event_type}&#39;) ;f() 155 except ex: self(f&#39;after_cancel_{event_type}&#39;) 156 finally: self(f&#39;after_{event_type}&#39;) ;final() /opt/conda/envs/fastai/lib/python3.8/site-packages/fastai/learner.py in all_batches(self) 158 def all_batches(self): 159 self.n_iter = len(self.dl) --&gt; 160 for o in enumerate(self.dl): self.one_batch(*o) 161 162 def _do_one_batch(self): /opt/conda/envs/fastai/lib/python3.8/site-packages/fastai/learner.py in one_batch(self, i, b) 176 self.iter = i 177 self._split(b) --&gt; 178 self._with_events(self._do_one_batch, &#39;batch&#39;, CancelBatchException) 179 180 def _do_epoch_train(self): /opt/conda/envs/fastai/lib/python3.8/site-packages/fastai/learner.py in _with_events(self, f, event_type, ex, final) 152 153 def _with_events(self, f, event_type, ex, final=noop): --&gt; 154 try: self(f&#39;before_{event_type}&#39;) ;f() 155 except ex: self(f&#39;after_cancel_{event_type}&#39;) 156 finally: self(f&#39;after_{event_type}&#39;) ;final() /opt/conda/envs/fastai/lib/python3.8/site-packages/fastai/learner.py in _do_one_batch(self) 161 162 def _do_one_batch(self): --&gt; 163 self.pred = self.model(*self.xb) 164 self(&#39;after_pred&#39;) 165 if len(self.yb): self.loss = self.loss_func(self.pred, *self.yb) /opt/conda/envs/fastai/lib/python3.8/site-packages/torch/nn/modules/module.py in _call_impl(self, *input, **kwargs) 725 result = self._slow_forward(*input, **kwargs) 726 else: --&gt; 727 result = self.forward(*input, **kwargs) 728 for hook in itertools.chain( 729 _global_forward_hooks.values(), /opt/conda/envs/fastai/lib/python3.8/site-packages/torch/nn/modules/container.py in forward(self, input) 115 def forward(self, input): 116 for module in self: --&gt; 117 input = module(input) 118 return input 119 /opt/conda/envs/fastai/lib/python3.8/site-packages/torch/nn/modules/module.py in _call_impl(self, *input, **kwargs) 725 result = self._slow_forward(*input, **kwargs) 726 else: --&gt; 727 result = self.forward(*input, **kwargs) 728 for hook in itertools.chain( 729 _global_forward_hooks.values(), /opt/conda/envs/fastai/lib/python3.8/site-packages/fastai/text/models/core.py in forward(self, input) 79 #Note: this expects that sequence really begins on a round multiple of bptt 80 real_bs = (input[:,i] != self.pad_idx).long().sum() &gt; 81 o = self.module(input[:real_bs,i: min(i+self.bptt, sl)]) 82 if self.max_len is None or sl-i &lt;= self.max_len: 83 outs.append(o) /opt/conda/envs/fastai/lib/python3.8/site-packages/torch/nn/modules/module.py in _call_impl(self, *input, **kwargs) 725 result = self._slow_forward(*input, **kwargs) 726 else: --&gt; 727 result = self.forward(*input, **kwargs) 728 for hook in itertools.chain( 729 _global_forward_hooks.values(), /opt/conda/envs/fastai/lib/python3.8/site-packages/fastai/text/models/awdlstm.py in forward(self, inp, from_embeds) 104 new_hidden = [] 105 for l, (rnn,hid_dp) in enumerate(zip(self.rnns, self.hidden_dps)): --&gt; 106 output, new_h = rnn(output, self.hidden[l]) 107 new_hidden.append(new_h) 108 if l != self.n_layers - 1: output = hid_dp(output) /opt/conda/envs/fastai/lib/python3.8/site-packages/torch/nn/modules/module.py in _call_impl(self, *input, **kwargs) 725 result = self._slow_forward(*input, **kwargs) 726 else: --&gt; 727 result = self.forward(*input, **kwargs) 728 for hook in itertools.chain( 729 _global_forward_hooks.values(), /opt/conda/envs/fastai/lib/python3.8/site-packages/fastai/text/models/awdlstm.py in forward(self, *args) 51 # To avoid the warning that comes because the weights aren&#39;t flattened. 52 warnings.simplefilter(&#34;ignore&#34;, category=UserWarning) &gt; 53 return self.module(*args) 54 55 def reset(self): /opt/conda/envs/fastai/lib/python3.8/site-packages/torch/nn/modules/module.py in _call_impl(self, *input, **kwargs) 725 result = self._slow_forward(*input, **kwargs) 726 else: --&gt; 727 result = self.forward(*input, **kwargs) 728 for hook in itertools.chain( 729 _global_forward_hooks.values(), /opt/conda/envs/fastai/lib/python3.8/site-packages/torch/nn/modules/rnn.py in forward(self, input, hx) 579 self.check_forward_args(input, hx, batch_sizes) 580 if batch_sizes is None: --&gt; 581 result = _VF.lstm(input, hx, self._flat_weights, self.bias, self.num_layers, 582 self.dropout, self.training, self.bidirectional, self.batch_first) 583 else: /opt/conda/envs/fastai/lib/python3.8/site-packages/fastai/torch_core.py in __torch_function__(self, func, types, args, kwargs) 315 316 def __torch_function__(self, func, types, args=(), kwargs=None): --&gt; 317 with torch._C.DisableTorchFunction(): ret = _convert(func(*args, **(kwargs or {})), self.__class__) 318 if isinstance(ret, TensorBase): ret.set_meta(self, as_copy=True) 319 return ret KeyboardInterrupt: . If you hit a &quot;CUDA out of memory error&quot; after running this cell, click on the menu Kernel, then restart. Instead of executing the cell above, copy and paste the following code in it: . from fastai.text.all import * dls = TextDataLoaders.from_folder(untar_data(URLs.IMDB), valid=&#39;test&#39;, bs=32) learn = text_classifier_learner(dls, AWD_LSTM, drop_mult=0.5, metrics=accuracy) learn.fine_tune(4, 1e-2) . This reduces the batch size to 32 (we will explain this later). If you keep hitting the same error, change 32 to 16. . learn.predict(&quot;I really liked that movie!&quot;) . (&#39;neg&#39;, TensorText(0), TensorText([0.5623, 0.4377])) . Sidebar: The Order Matters . End sidebar . from fastai.tabular.all import * path = untar_data(URLs.ADULT_SAMPLE) dls = TabularDataLoaders.from_csv(path/&#39;adult.csv&#39;, path=path, y_names=&quot;salary&quot;, cat_names = [&#39;workclass&#39;, &#39;education&#39;, &#39;marital-status&#39;, &#39;occupation&#39;, &#39;relationship&#39;, &#39;race&#39;], cont_names = [&#39;age&#39;, &#39;fnlwgt&#39;, &#39;education-num&#39;], procs = [Categorify, FillMissing, Normalize]) learn = tabular_learner(dls, metrics=accuracy) . learn.fit_one_cycle(3) . epoch train_loss valid_loss accuracy time . 0 | 0.367843 | 0.357764 | 0.832924 | 00:07 | . 1 | 0.362614 | 0.354566 | 0.831849 | 00:07 | . 2 | 0.344427 | 0.349152 | 0.837838 | 00:08 | . from fastai.collab import * path = untar_data(URLs.ML_SAMPLE) dls = CollabDataLoaders.from_csv(path/&#39;ratings.csv&#39;) learn = collab_learner(dls, y_range=(0.5,5.5)) learn.fine_tune(20) . epoch train_loss valid_loss time . 0 | 1.523609 | 1.353591 | 00:00 | . epoch train_loss valid_loss time . 0 | 1.377288 | 1.306087 | 00:00 | . 1 | 1.314181 | 1.222488 | 00:00 | . 2 | 1.191319 | 1.065583 | 00:00 | . 3 | 1.010563 | 0.854901 | 00:00 | . 4 | 0.818294 | 0.725766 | 00:00 | . 5 | 0.699861 | 0.688180 | 00:00 | . 6 | 0.650566 | 0.677446 | 00:00 | . 7 | 0.629411 | 0.673032 | 00:00 | . 8 | 0.609606 | 0.668113 | 00:00 | . 9 | 0.606750 | 0.663429 | 00:00 | . 10 | 0.594681 | 0.660590 | 00:00 | . 11 | 0.583541 | 0.656942 | 00:00 | . 12 | 0.574227 | 0.654432 | 00:00 | . 13 | 0.567019 | 0.651633 | 00:00 | . 14 | 0.548985 | 0.650612 | 00:00 | . 15 | 0.544749 | 0.649310 | 00:00 | . 16 | 0.542530 | 0.648421 | 00:00 | . 17 | 0.546451 | 0.648087 | 00:00 | . 18 | 0.544443 | 0.647970 | 00:00 | . 19 | 0.539262 | 0.647940 | 00:00 | . learn.show_results() . userId movieId rating rating_pred . 0 83.0 | 64.0 | 3.5 | 3.697940 | . 1 27.0 | 42.0 | 3.0 | 3.154352 | . 2 73.0 | 48.0 | 4.0 | 3.848425 | . 3 80.0 | 31.0 | 3.5 | 3.996437 | . 4 12.0 | 13.0 | 4.0 | 3.767331 | . 5 30.0 | 20.0 | 3.0 | 4.216630 | . 6 85.0 | 58.0 | 5.0 | 4.794383 | . 7 27.0 | 54.0 | 2.5 | 4.053595 | . 8 66.0 | 44.0 | 4.0 | 3.077837 | . Sidebar: Datasets: Food for Models . End sidebar . Validation Sets and Test Sets . Use Judgment in Defining Test Sets . A Choose Your Own Adventure moment . Questionnaire . It can be hard to know in pages and pages of prose what the key things are that you really need to focus on and remember. So, we&#39;ve prepared a list of questions and suggested steps to complete at the end of each chapter. All the answers are in the text of the chapter, so if you&#39;re not sure about anything here, reread that part of the text and make sure you understand it. Answers to all these questions are also available on the book&#39;s website. You can also visit the forums if you get stuck to get help from other folks studying this material. . For more questions, including detailed answers and links to the video timeline, have a look at Radek Osmulski&#39;s aiquizzes. . Do you need these for deep learning? . Lots of math T / F | Lots of data T / F | Lots of expensive computers T / F | A PhD T / F | . | Name five areas where deep learning is now the best in the world. . | What was the name of the first device that was based on the principle of the artificial neuron? | Based on the book of the same name, what are the requirements for parallel distributed processing (PDP)? | What were the two theoretical misunderstandings that held back the field of neural networks? | What is a GPU? | Open a notebook and execute a cell containing: 1+1. What happens? | Follow through each cell of the stripped version of the notebook for this chapter. Before executing each cell, guess what will happen. | Complete the Jupyter Notebook online appendix. | Why is it hard to use a traditional computer program to recognize images in a photo? | What did Samuel mean by &quot;weight assignment&quot;? | What term do we normally use in deep learning for what Samuel called &quot;weights&quot;? | Draw a picture that summarizes Samuel&#39;s view of a machine learning model. | Why is it hard to understand why a deep learning model makes a particular prediction? | What is the name of the theorem that shows that a neural network can solve any mathematical problem to any level of accuracy? | What do you need in order to train a model? | How could a feedback loop impact the rollout of a predictive policing model? | Do we always have to use 224×224-pixel images with the cat recognition model? | What is the difference between classification and regression? | What is a validation set? What is a test set? Why do we need them? | What will fastai do if you don&#39;t provide a validation set? | Can we always use a random sample for a validation set? Why or why not? | What is overfitting? Provide an example. | What is a metric? How does it differ from &quot;loss&quot;? | How can pretrained models help? | What is the &quot;head&quot; of a model? | What kinds of features do the early layers of a CNN find? How about the later layers? | Are image models only useful for photos? | What is an &quot;architecture&quot;? | What is segmentation? | What is y_range used for? When do we need it? | What are &quot;hyperparameters&quot;? | What&#39;s the best way to avoid failures when using AI in an organization? | Further Research . Each chapter also has a &quot;Further Research&quot; section that poses questions that aren&#39;t fully answered in the text, or gives more advanced assignments. Answers to these questions aren&#39;t on the book&#39;s website; you&#39;ll need to do your own research! . Why is a GPU useful for deep learning? How is a CPU different, and why is it less effective for deep learning? | Try to think of three areas where feedback loops might impact the use of machine learning. See if you can find documented examples of that happening in practice. |",
            "url": "https://chrismilleruk.github.io/fastpages/2021/01/06/fastai-01_intro.html",
            "relUrl": "/2021/01/06/fastai-01_intro.html",
            "date": " • Jan 6, 2021"
        }
        
    
  
    
        ,"post2": {
            "title": "Fastpages Notebook Blog Post",
            "content": "About . This notebook is a demonstration of some of capabilities of fastpages with notebooks. . With fastpages you can save your jupyter notebooks into the _notebooks folder at the root of your repository, and they will be automatically be converted to Jekyll compliant blog posts! . Front Matter . The first cell in your Jupyter Notebook or markdown blog post contains front matter. Front matter is metadata that can turn on/off options in your Notebook. It is formatted like this: . # &quot;My Title&quot; &gt; &quot;Awesome summary&quot; - toc:true- branch: master - badges: true - comments: true - author: Hamel Husain &amp; Jeremy Howard - categories: [fastpages, jupyter] . Setting toc: true will automatically generate a table of contents | Setting badges: true will automatically include GitHub and Google Colab links to your notebook. | Setting comments: true will enable commenting on your blog post, powered by utterances. | . The title and description need to be enclosed in double quotes only if they include special characters such as a colon. More details and options for front matter can be viewed on the front matter section of the README. . Markdown Shortcuts . A #hide comment at the top of any code cell will hide both the input and output of that cell in your blog post. . A #hide_input comment at the top of any code cell will only hide the input of that cell. . The comment #hide_input was used to hide the code that produced this. . put a #collapse-hide flag at the top of any cell if you want to hide that cell by default, but give the reader the option to show it: . import pandas as pd import altair as alt . . put a #collapse-show flag at the top of any cell if you want to show that cell by default, but give the reader the option to hide it: . cars = &#39;https://vega.github.io/vega-datasets/data/cars.json&#39; movies = &#39;https://vega.github.io/vega-datasets/data/movies.json&#39; sp500 = &#39;https://vega.github.io/vega-datasets/data/sp500.csv&#39; stocks = &#39;https://vega.github.io/vega-datasets/data/stocks.csv&#39; flights = &#39;https://vega.github.io/vega-datasets/data/flights-5k.json&#39; . . place a #collapse-output flag at the top of any cell if you want to put the output under a collapsable element that is closed by default, but give the reader the option to open it: . print(&#39;The comment #collapse-output was used to collapse the output of this cell by default but you can expand it.&#39;) . The comment #collapse-output was used to collapse the output of this cell by default but you can expand it. . . Interactive Charts With Altair . Charts made with Altair remain interactive. Example charts taken from this repo, specifically this notebook. . Example 1: DropDown . # use specific hard-wired values as the initial selected values selection = alt.selection_single( name=&#39;Select&#39;, fields=[&#39;Major_Genre&#39;, &#39;MPAA_Rating&#39;], init={&#39;Major_Genre&#39;: &#39;Drama&#39;, &#39;MPAA_Rating&#39;: &#39;R&#39;}, bind={&#39;Major_Genre&#39;: alt.binding_select(options=genres), &#39;MPAA_Rating&#39;: alt.binding_radio(options=mpaa)} ) # scatter plot, modify opacity based on selection alt.Chart(df).mark_circle().add_selection( selection ).encode( x=&#39;Rotten_Tomatoes_Rating:Q&#39;, y=&#39;IMDB_Rating:Q&#39;, tooltip=&#39;Title:N&#39;, opacity=alt.condition(selection, alt.value(0.75), alt.value(0.05)) ) . Example 2: Tooltips . alt.Chart(df).mark_circle().add_selection( alt.selection_interval(bind=&#39;scales&#39;, encodings=[&#39;x&#39;]) ).encode( alt.X(&#39;Rotten_Tomatoes_Rating&#39;, type=&#39;quantitative&#39;), alt.Y(&#39;IMDB_Rating&#39;, type=&#39;quantitative&#39;, axis=alt.Axis(minExtent=30)), # y=alt.Y(&#39;IMDB_Rating:Q&#39;, ), # use min extent to stabilize axis title placement tooltip=[&#39;Title:N&#39;, &#39;Release_Date:N&#39;, &#39;IMDB_Rating:Q&#39;, &#39;Rotten_Tomatoes_Rating:Q&#39;] ).properties( width=500, height=400 ) . Example 3: More Tooltips . label = alt.selection_single( encodings=[&#39;x&#39;], # limit selection to x-axis value on=&#39;mouseover&#39;, # select on mouseover events nearest=True, # select data point nearest the cursor empty=&#39;none&#39; # empty selection includes no data points ) # define our base line chart of stock prices base = alt.Chart().mark_line().encode( alt.X(&#39;date:T&#39;), alt.Y(&#39;price:Q&#39;, scale=alt.Scale(type=&#39;log&#39;)), alt.Color(&#39;symbol:N&#39;) ) alt.layer( base, # base line chart # add a rule mark to serve as a guide line alt.Chart().mark_rule(color=&#39;#aaa&#39;).encode( x=&#39;date:T&#39; ).transform_filter(label), # add circle marks for selected time points, hide unselected points base.mark_circle().encode( opacity=alt.condition(label, alt.value(1), alt.value(0)) ).add_selection(label), # add white stroked text to provide a legible background for labels base.mark_text(align=&#39;left&#39;, dx=5, dy=-5, stroke=&#39;white&#39;, strokeWidth=2).encode( text=&#39;price:Q&#39; ).transform_filter(label), # add text labels for stock prices base.mark_text(align=&#39;left&#39;, dx=5, dy=-5).encode( text=&#39;price:Q&#39; ).transform_filter(label), data=stocks ).properties( width=500, height=400 ) . Data Tables . You can display tables per the usual way in your blog: . df[[&#39;Title&#39;, &#39;Worldwide_Gross&#39;, &#39;Production_Budget&#39;, &#39;Distributor&#39;, &#39;MPAA_Rating&#39;, &#39;IMDB_Rating&#39;, &#39;Rotten_Tomatoes_Rating&#39;]].head() . Title Worldwide_Gross Production_Budget Distributor MPAA_Rating IMDB_Rating Rotten_Tomatoes_Rating . 0 The Land Girls | 146083.0 | 8000000.0 | Gramercy | R | 6.1 | NaN | . 1 First Love, Last Rites | 10876.0 | 300000.0 | Strand | R | 6.9 | NaN | . 2 I Married a Strange Person | 203134.0 | 250000.0 | Lionsgate | None | 6.8 | NaN | . 3 Let&#39;s Talk About Sex | 373615.0 | 300000.0 | Fine Line | None | NaN | 13.0 | . 4 Slam | 1087521.0 | 1000000.0 | Trimark | R | 3.4 | 62.0 | . Images . Local Images . You can reference local images and they will be copied and rendered on your blog automatically. You can include these with the following markdown syntax: . ![](my_icons/fastai_logo.png) . . Remote Images . Remote images can be included with the following markdown syntax: . ![](https://image.flaticon.com/icons/svg/36/36686.svg) . . Animated Gifs . Animated Gifs work, too! . ![](https://upload.wikimedia.org/wikipedia/commons/7/71/ChessPawnSpecialMoves.gif) . . Captions . You can include captions with markdown images like this: . ![](https://www.fast.ai/images/fastai_paper/show_batch.png &quot;Credit: https://www.fast.ai/2020/02/13/fastai-A-Layered-API-for-Deep-Learning/&quot;) . . Other Elements . GitHub Flavored Emojis . Typing I give this post two :+1:! will render this: . I give this post two :+1:! . Tweetcards . Typing &gt; twitter: https://twitter.com/jakevdp/status/1204765621767901185?s=20 will render this: Altair 4.0 is released! https://t.co/PCyrIOTcvvTry it with: pip install -U altairThe full list of changes is at https://t.co/roXmzcsT58 ...read on for some highlights. pic.twitter.com/vWJ0ZveKbZ . &mdash; Jake VanderPlas (@jakevdp) December 11, 2019 . Youtube Videos . Typing &gt; youtube: https://youtu.be/XfoYk_Z5AkI will render this: . Boxes / Callouts . Typing &gt; Warning: There will be no second warning! will render this: . Warning: There will be no second warning! . Typing &gt; Important: Pay attention! It&#39;s important. will render this: . Important: Pay attention! It&#8217;s important. . Typing &gt; Tip: This is my tip. will render this: . Tip: This is my tip. . Typing &gt; Note: Take note of this. will render this: . Note: Take note of this. . Typing &gt; Note: A doc link to [an example website: fast.ai](https://www.fast.ai/) should also work fine. will render in the docs: . Note: A doc link to an example website: fast.ai should also work fine. . Footnotes . You can have footnotes in notebooks, however the syntax is different compared to markdown documents. This guide provides more detail about this syntax, which looks like this: . For example, here is a footnote {% fn 1 %}. And another {% fn 2 %} {{ &#39;This is the footnote.&#39; | fndetail: 1 }} {{ &#39;This is the other footnote. You can even have a [link](www.github.com)!&#39; | fndetail: 2 }} . For example, here is a footnote 1. . And another 2 . 1. This is the footnote.↩ . 2. This is the other footnote. You can even have a link!↩ .",
            "url": "https://chrismilleruk.github.io/fastpages/jupyter/2020/02/20/test.html",
            "relUrl": "/jupyter/2020/02/20/test.html",
            "date": " • Feb 20, 2020"
        }
        
    
  
    
        ,"post3": {
            "title": "An Example Markdown Post",
            "content": "Example Markdown Post . Basic setup . Jekyll requires blog post files to be named according to the following format: . YEAR-MONTH-DAY-filename.md . Where YEAR is a four-digit number, MONTH and DAY are both two-digit numbers, and filename is whatever file name you choose, to remind yourself what this post is about. .md is the file extension for markdown files. . The first line of the file should start with a single hash character, then a space, then your title. This is how you create a “level 1 heading” in markdown. Then you can create level 2, 3, etc headings as you wish but repeating the hash character, such as you see in the line ## File names above. . Basic formatting . You can use italics, bold, code font text, and create links. Here’s a footnote 1. Here’s a horizontal rule: . . Lists . Here’s a list: . item 1 | item 2 | . And a numbered list: . item 1 | item 2 | Boxes and stuff . This is a quotation . . You can include alert boxes …and… . . You can include info boxes Images . . Code . You can format text and code per usual . General preformatted text: . # Do a thing do_thing() . Python code and output: . # Prints &#39;2&#39; print(1+1) . 2 . Formatting text as shell commands: . echo &quot;hello world&quot; ./some_script.sh --option &quot;value&quot; wget https://example.com/cat_photo1.png . Formatting text as YAML: . key: value - another_key: &quot;another value&quot; . Tables . Column 1 Column 2 . A thing | Another thing | . Tweetcards . Altair 4.0 is released! https://t.co/PCyrIOTcvvTry it with: pip install -U altairThe full list of changes is at https://t.co/roXmzcsT58 ...read on for some highlights. pic.twitter.com/vWJ0ZveKbZ . &mdash; Jake VanderPlas (@jakevdp) December 11, 2019 Footnotes . This is the footnote. &#8617; . |",
            "url": "https://chrismilleruk.github.io/fastpages/markdown/2020/01/14/test-markdown-post.html",
            "relUrl": "/markdown/2020/01/14/test-markdown-post.html",
            "date": " • Jan 14, 2020"
        }
        
    
  

  
  

  
      ,"page1": {
          "title": "About Me",
          "content": "Hi! My name is Chris :rocket: . That’s all you need to know for now, but I’ll put more here later. . Find me online using the links in the footer or see some recent tweets: . Tweets by chrismilleruk btw. this website is powered by fastpages 1. . a blogging platform that natively supports Jupyter notebooks in addition to other formats. &#8617; . |",
          "url": "https://chrismilleruk.github.io/fastpages/about/",
          "relUrl": "/about/",
          "date": ""
      }
      
  

  

  
  

  

  
  

  

  
  

  
  

  
  

  
      ,"page10": {
          "title": "",
          "content": "Sitemap: {{ “sitemap.xml” | absolute_url }} | .",
          "url": "https://chrismilleruk.github.io/fastpages/robots.txt",
          "relUrl": "/robots.txt",
          "date": ""
      }
      
  

}